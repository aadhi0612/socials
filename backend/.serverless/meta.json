{
  "/home/aadhityaa/code/socials/backend/serverless.yml": {
    "versionFramework": "4.17.1",
    "servicePath": "/home/aadhityaa/code/socials/backend/serverless.yml",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "service": "socials-backend",
      "provider": {
        "name": "aws",
        "runtime": "python3.9",
        "region": "us-east-2",
        "stage": "prod",
        "timeout": 30,
        "memorySize": 512,
        "environment": {
          "DEFAULT_REGION": "us-east-2",
          "BEDROCK_REGION": "us-east-1",
          "S3_BUCKET": "socials-aws-1",
          "X_API_KEY": "<REDACTED>",
          "X_API_KEY_SECRET": "<REDACTED>",
          "X_BEARER_TOKEN": "<REDACTED>",
          "X_ACCESS_TOKEN": "<REDACTED>",
          "X_ACCESS_TOKEN_SECRET": "<REDACTED>",
          "LINKEDIN_CLIENT_ID": "${env:LINKEDIN_CLIENT_ID}",
          "LINKEDIN_CLIENT_SECRET": "<REDACTED>"
        },
        "iam": {
          "role": {
            "statements": [
              {
                "Effect": "Allow",
                "Action": [
                  "bedrock:*",
                  "s3:*",
                  "dynamodb:*",
                  "secretsmanager:GetSecretValue",
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                ],
                "Resource": "*"
              }
            ]
          }
        }
      },
      "functions": {
        "api": {
          "handler": "lambda_handler.handler",
          "events": [
            {
              "httpApi": {
                "path": "/{proxy+}",
                "method": "ANY",
                "cors": {
                  "allowOrigins": [
                    "https://socials.dataopslabs.com",
                    "http://localhost:5173"
                  ],
                  "allowHeaders": [
                    "Content-Type",
                    "Authorization",
                    "X-User-Id"
                  ],
                  "allowMethods": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "OPTIONS",
                    "PATCH"
                  ]
                }
              }
            },
            {
              "httpApi": {
                "path": "/",
                "method": "ANY",
                "cors": {
                  "allowOrigins": [
                    "https://socials.dataopslabs.com",
                    "http://localhost:5173"
                  ],
                  "allowHeaders": [
                    "Content-Type",
                    "Authorization",
                    "X-User-Id"
                  ],
                  "allowMethods": [
                    "GET",
                    "POST",
                    "PUT",
                    "DELETE",
                    "OPTIONS",
                    "PATCH"
                  ]
                }
              }
            }
          ]
        }
      },
      "plugins": [
        "serverless-python-requirements"
      ],
      "custom": {
        "pythonRequirements": {
          "dockerizePip": true,
          "slim": true,
          "strip": false,
          "noDeps": false,
          "pipCmdExtraArgs": [
            "--no-cache-dir"
          ]
        }
      }
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "us-east-2",
      "stage": "prod",
      "timeout": 30,
      "memorySize": 512,
      "environment": {
        "DEFAULT_REGION": "us-east-2",
        "BEDROCK_REGION": "us-east-1",
        "S3_BUCKET": "socials-aws-1",
        "X_API_KEY": "<REDACTED>",
        "X_API_KEY_SECRET": "<REDACTED>",
        "X_BEARER_TOKEN": "<REDACTED>",
        "X_ACCESS_TOKEN": "<REDACTED>",
        "X_ACCESS_TOKEN_SECRET": "<REDACTED>",
        "LINKEDIN_CLIENT_ID": "${env:LINKEDIN_CLIENT_ID}",
        "LINKEDIN_CLIENT_SECRET": "<REDACTED>"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "bedrock:*",
                "s3:*",
                "dynamodb:*",
                "secretsmanager:GetSecretValue",
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    },
    "error": {
      "message": "You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".",
      "stack": "Error: You must sign in or use a license key with Serverless Framework V.4 and later versions. Please use \"serverless login\".\n    at Authentication.getAuthenticatedData (file:///home/aadhityaa/.serverless/releases/4.17.1/package/dist/sf-core.js:828:10901)\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async Authentication.authenticate (file:///home/aadhityaa/.serverless/releases/4.17.1/package/dist/sf-core.js:830:22245)\n    at async TraditionalRunner.resolveVariablesAndAuthenticate (file:///home/aadhityaa/.serverless/releases/4.17.1/package/dist/sf-core.js:834:2379)\n    at async TraditionalRunner.run (file:///home/aadhityaa/.serverless/releases/4.17.1/package/dist/sf-core.js:1407:27919)\n    at async route (file:///home/aadhityaa/.serverless/releases/4.17.1/package/dist/sf-core.js:1582:2878)\n    at async Object.run (file:///home/aadhityaa/.serverless/releases/4.17.1/package/dist/sf-core.js:1583:3661)\n    at async run2 (file:///home/aadhityaa/.serverless/releases/4.17.1/package/dist/sf-core.js:1583:4815)"
    },
    "serviceRawFile": "service: socials-backend\n\nprovider:\n  name: aws\n  runtime: python3.9\n  region: us-east-2\n  stage: prod\n  timeout: 30\n  memorySize: 512\n  environment:\n    DEFAULT_REGION: us-east-2\n    BEDROCK_REGION: us-east-1\n    S3_BUCKET: socials-aws-1\n    X_API_KEY: ${env:X_API_KEY}\n    X_API_KEY_SECRET: ${env:X_API_KEY_SECRET}\n    X_BEARER_TOKEN: ${env:X_BEARER_TOKEN}\n    X_ACCESS_TOKEN: ${env:X_ACCESS_TOKEN}\n    X_ACCESS_TOKEN_SECRET: ${env:X_ACCESS_TOKEN_SECRET}\n    LINKEDIN_CLIENT_ID: ${env:LINKEDIN_CLIENT_ID}\n    LINKEDIN_CLIENT_SECRET: ${env:LINKEDIN_CLIENT_SECRET}\n  iam:\n    role:\n      statements:\n        - Effect: Allow\n          Action:\n            - bedrock:*\n            - s3:*\n            - dynamodb:*\n            - secretsmanager:GetSecretValue\n            - logs:CreateLogGroup\n            - logs:CreateLogStream\n            - logs:PutLogEvents\n          Resource: \"*\"\n\nfunctions:\n  api:\n    handler: lambda_handler.handler\n    events:\n      - httpApi:\n          path: /{proxy+}\n          method: ANY\n          cors:\n            allowOrigins:\n              - https://socials.dataopslabs.com\n              - http://localhost:5173\n            allowHeaders:\n              - Content-Type\n              - Authorization\n              - X-User-Id\n            allowMethods:\n              - GET\n              - POST\n              - PUT\n              - DELETE\n              - OPTIONS\n              - PATCH\n      - httpApi:\n          path: /\n          method: ANY\n          cors:\n            allowOrigins:\n              - https://socials.dataopslabs.com\n              - http://localhost:5173\n            allowHeaders:\n              - Content-Type\n              - Authorization\n              - X-User-Id\n            allowMethods:\n              - GET\n              - POST\n              - PUT\n              - DELETE\n              - OPTIONS\n              - PATCH\n\nplugins:\n  - serverless-python-requirements\n\ncustom:\n  pythonRequirements:\n    dockerizePip: true\n    slim: true\n    strip: false\n    noDeps: false\n    pipCmdExtraArgs:\n      - --no-cache-dir\n",
    "command": [
      "deploy"
    ],
    "options": {
      "verbose": true
    },
    "serviceProviderAwsCfStackId": null,
    "serviceProviderAwsCfStackCreated": null,
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": null,
    "serviceProviderAwsCfStackOutputs": null
  }
}